name: validate
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 💾 Cache node modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: 📀 Install dependencies
        run: yarn

      - name: 🧹 Lint
        run: yarn run lint

      - name: 😍 Prettier check
        run: yarn run check

      - name: 🧪 Test
        run: yarn run coverage

      - name: 👷‍♀️ Build
        run: yarn run build

      - name: ⏫ Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            build

  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-args: '--prod' #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
          working-directory: ./sub-directory

  codecov:
    name: 'Coverage'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
